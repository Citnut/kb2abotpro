const { getParam } = kb2abot.helpers;
const admin = require("../../../CONFIG.js").SUPER_ADMINS;
const msg = {
	menu: `===KB2ABOT===\nH√£y ph·∫£n h·ªìi (reply) tin nh·∫Øn n√†y s·ªë b·∫°n ch·ªçn\n1. Th·ª±c hi·ªán chuy·ªÉn kho·∫£n\n2. Xem s·ªë d∆∞ c·ªßa b·∫°n\n3. Xem danh s√°ch nh·ªØng ng∆∞·ªùi gi√†u c√≥ nh·∫•t\n===KB2ABOT===`,
	_menu: `===KB2ABOT===\nH√£y ph·∫£n h·ªìi (reply) tin nh·∫Øn n√†y s·ªë b·∫°n ch·ªçn\n1. Th·ª±c hi·ªán chuy·ªÉn kho·∫£n\n2. Xem s·ªë d∆∞ c·ªßa b·∫°n\n3. Xem danh s√°ch nh·ªØng ng∆∞·ªùi gi√†u c√≥ nh·∫•t\n4. (ADMIN) thay ƒë·ªïi s·ªë d∆∞ c·ªßa m·ªôt ng∆∞·ªùi d√πng\n===KB2ABOT===`,
	chuyenkhoan: `===KB2ABOT===\nƒê·ªÉ th·ª±c hi·ªán chuy·ªÉn kho·∫£n h√£y ph·∫£n h·ªìi (reply) tin nh·∫Øn n√†y b·∫±ng m·ªôt tin nh·∫Øn v·ªõi ƒë·ªãnh d·∫°ng\n<uid/mention>|<s·ªë ti·ªÅn>|[n·ªôi dung chuy·ªÉn kho·∫£n]\n===KB2ABOT===`,
	set: `===KB2ABOT===\nƒê·ªÉ th·ª±c hi·ªán ch·ªânh s·ª≠a s·ªë d∆∞ h√£y ph·∫£n h·ªìi (reply) tin nh·∫Øn n√†y b·∫±ng m·ªôt tin nh·∫Øn v·ªõi ƒë·ªãnh d·∫°ng\n<uid/mention>|<s·ªë ti·ªÅn>|[l·ªùi nh·∫Øn]\n===KB2ABOT===`
};
module.exports = {
	name: "pay to win :)))",

	keywords: ["pay", "money"],

	description: "giao d·ªãch, chuy·ªÉn kho·∫£n c√°c th·ª©",

	guide: "",

	
	hookType: "*",

	childs: [],

	permission: {'*': '*'},
	datastoreDesign: {
		account: {
			global: {},
			local: {}
		},
		thread: {
			global: {},
			local: {}
		}
	},

	async onLoad() {
	},

	async onMessage(message, reply) {
		let storage = this.storage.account.global;
		if (!storage.console.bot) {storage.console.bot={}}
		if (!storage.console.bot.id) {storage.console.bot.id = await require("../../../../../bots/bot.json")[5].value}
		
		
		if (!storage.eco) { storage.eco = {} };
		if (!storage.eco[message.senderID]) { storage.eco[message.senderID] = {} };
		if (!storage.eco[message.senderID].money) { storage.eco[message.senderID].money = 0 };
		if (message.type != "message_reply") return;
		if (message.messageReply.senderID != storage.console.bot.id) return;
		let id = arg = tinnhan = "";
		
		async function bxh () {
			try {
				let arr = [];
				let listid = Object.keys(storage.eco);
				for (const uid of listid) {
					arr.push({
						uid,
						value: storage.eco[uid].money
					});
				};
				arr.sort((a, b) => b.value - a.value);
				let mentions = [];
				let body = `===KB2ABOT===\nTop 10 ng∆∞·ªùi gi√†u c√≥ nh·∫•t bot n√†y:\n`;
				for (let i = 0; i < arr.length; i++) {
					if (i < 10) {
						body += `${i+1}. ${storage.console[arr[i].uid]}: ${storage.eco[arr[i].uid].money} üíµ\n`;
						mentions.push({
							tag: `${storage.console[arr[i].uid]}`,
							id: arr[i].uid
						})
					}else { i = arr.length }
				};
				body += `===KB2ABOT===`
				return reply({
					body,
					mentions
				})
			} catch (e) {
				console.error(e);
				return reply(`ƒë√£ x·∫£y ra l·ªói!`)
			}
		};

		switch (message.messageReply.body) {
			case msg.menu:
				if (isNaN(message.body)) return reply(`l·ª±a ch·ªçn c·ªßa b·∫°n ph·∫£i l√† m·ªôt con s·ªë!`);
				switch (message.body) {
					case "1":
						return reply(msg.chuyenkhoan)
					break;
					case "2":
						return reply(`üí≥ s·ªë t√†i kho·∫£n: ${message.senderID}\nüí≥ s·ªë d∆∞ ch√≠nh: ${storage.eco[message.senderID].money}`)
					break;
					case "3":
						return await bxh()
					break;
					default:
						return reply(`l·ª±a ch·ªçn c·ªßa b·∫°n kh√¥ng c√≥ trong danh s√°ch!`)
					break
				}
			break;
			case msg._menu:
				if (isNaN(message.body)) return reply(`l·ª±a ch·ªçn c·ªßa b·∫°n ph·∫£i l√† m·ªôt con s·ªë!`);
				switch (message.body) {
					case "1":
						return reply(msg.chuyenkhoan)
					break;
					case "2":
						return reply(`üí≥ s·ªë t√†i kho·∫£n: ${message.senderID}\nüí≥ s·ªë d∆∞ ch√≠nh: ${storage.eco[message.senderID].money}üíµ`)
					break;
					case "3":
						return await bxh()
					break;
					case "4":
						if (!admin.includes(message.senderID)) return reply(`b·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng ch·ª©c nƒÉng n√†y!`);
						return reply(msg.set)
					default:
						return reply(`l·ª±a ch·ªçn c·ªßa b·∫°n kh√¥ng c√≥ trong danh s√°ch!`)
					break
				}
			break;
			case msg.chuyenkhoan:
				id = Object.keys(message.mentions)[0] || "";
				arg = message.body.split("|");
				console.log(arg);
				if (isNaN(parseInt(arg[0])) && !id) return reply(`b·∫°n ph·∫£i g·∫Øn th·∫ª ai ƒë√≥ ho·∫∑c nh·∫≠p m·ªôt uid!`);
				if (isNaN(parseInt(arg[1])) || parseInt(arg[1]) < 0) return reply(`s·ªë ti·ªÅn ph·∫£i l√† m·ªôt con s·ªë v√† l·ªõn h∆°n 0`);
				if (storage.eco[message.senderID].money <= 0 || storage.eco[message.senderID].money < parseInt(arg[1])) return reply(`s·ªë d∆∞ c·ªßa b·∫°n kh√¥ng kh·∫£ d·ª•ng`);
				tinnhan = message.body.slice(arg[0].length+arg[1].length+2) || " ";

				try{
					let name = message.mentions[id] || storage.console[arg[0]];
					if (!isNaN(arg[0])) {
						if (!storage.console[parseInt(arg[0])]) return reply(`ng∆∞·ªùi d√πng n√†y ch∆∞a xu·∫•t hi·ªán!`);
						storage.eco[message.senderID].money -= parseInt(arg[1]);
						storage.eco[arg[0]].money += parseInt(arg[1]);
						return reply({body:`üí≥ t√†i kho·∫£n th·ª• h∆∞·ªüng: ${arg[0]}\nüí≥ ng∆∞·ªùi th·ª• h∆∞·ªüng: ${name}\nüí≥ giao d·ªãch: +${arg[1]}üíµ\nüí≥ n·ªôi dung: ${tinnhan}\nüí≥ s·ªë d∆∞ ch√≠nh: ${storage.eco[arg[0]].money}üíµ`,mentions:[{tag:name,id:arg[0]}]})
					};
					if (id) {
						if (!storage.console[id]) return reply(`ng∆∞·ªùi d√πng n√†y ch∆∞a xu·∫•t hi·ªán!`);
						storage.eco[message.senderID].money -= parseInt(arg[1]);
						storage.eco[id].money += parseInt(arg[1]);
						return reply({body:`üí≥ t√†i kho·∫£n th·ª• h∆∞·ªüng: ${id}\nüí≥ ng∆∞·ªùi th·ª• h∆∞·ªüng: ${name}\nüí≥ giao d·ªãch: +${arg[1]}üíµ\nüí≥ n·ªôi dung: ${tinnhan}\nüí≥ s·ªë d∆∞ ch√≠nh: ${storage.eco[id].money}üíµ`,mentions:[{tag:name,id}]})
					}
				} catch (e) {
					console.error(e);
					return reply(`ƒë√£ x·∫£y ra l·ªói!`)
				}
			break;
			case msg.set:
				if (!admin.includes(message.senderID)) return reply(`b·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng ch·ª©c nƒÉng n√†y!`);
				id = Object.keys(message.mentions)[0] || "";
				arg = message.body.split("|");
				console.log(arg);
				if (isNaN(parseInt(arg[0])) && !id) return reply(`b·∫°n ph·∫£i g·∫Øn th·∫ª ai ƒë√≥ ho·∫∑c nh·∫≠p m·ªôt uid!`);
				if (isNaN(parseInt(arg[1]))) return reply(`s·ªë ti·ªÅn ph·∫£i l√† m·ªôt con s·ªë`);
				//if (storage.eco[message.senderID].money <= 0 || storage.eco[message.senderID].money < parseInt(arg[1])) return reply(`s·ªë d∆∞ c·ªßa b·∫°n kh√¥ng kh·∫£ d·ª•ng`);
				tinnhan = message.body.slice(arg[0].length+arg[1].length+2) || " ";
				let sodu = (parseInt(arg[1]) < 0) ? `${arg[1]}` : `+${arg[1]}`;

				try{
					let name = message.mentions[id] || storage.console[arg[0]];
					if (!isNaN(arg[0])) {
						if (!storage.console[parseInt(arg[0])]) return reply(`ng∆∞·ªùi d√πng n√†y ch∆∞a xu·∫•t hi·ªán!`);
						storage.eco[arg[0]].money += parseInt(arg[1]);
						return reply({body:`üí≥ t√†i kho·∫£n: ${id}\nüí≥ t√™n ng∆∞·ªùi d√πng: ${name}\nüí≥ giao d·ªãch: ${sodu}üíµ\nüí≥ n·ªôi dung: ${tinnhan}\nüí≥ s·ªë d∆∞ ch√≠nh: ${storage.eco[arg[0]].money}üíµ`,mentions:[{tag:name,id:arg[0]}]})
					};
					if (id) {
						if (!storage.console[id]) return reply(`ng∆∞·ªùi d√πng n√†y ch∆∞a xu·∫•t hi·ªán!`);
						storage.eco[id].money += parseInt(arg[1]);
						return reply({body:`üí≥ t√†i kho·∫£n: ${id}\nüí≥ t√™n ng∆∞·ªùi d√πng: ${name}\nüí≥ giao d·ªãch: ${sodu}üíµ\nüí≥ n·ªôi dung: ${tinnhan}\nüí≥ s·ªë d∆∞ ch√≠nh: ${storage.eco[id].money}üíµ`,mentions:[{tag:name,id}]})
					}
				} catch (e) {
					console.error(e);
					return reply(`ƒë√£ x·∫£y ra l·ªói!`)
				}
			break;
			default:
			break
		}
	},

	async onCall(message, reply) {
		let setting = this.storage.account.global.citSetting;
		if (setting.run.setmoney != true) return reply("plugin n√†y ƒë√£ b·ªã t·∫Øt");
		/*let storage = this.storage.account.global;
		let id = Object.keys(message.mentions)[0];
		let name = message.mentions[id];
		let arg = getParam(message.body).split(" ");*/

		if (admin.includes(message.senderID)) {
			return reply(msg._menu)
		}else { return reply(msg.menu) }
		/*
		if (isNaN(arg[0])) return reply(`l·ªánh kh√¥ng h·ª£p l·ªá!`);
		if (!id) {
			storage.eco[message.senderID].money += parseInt(arg[0]);
			return reply(`t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·ªông th√™m ${arg[0]}üíµ`)
		};
		storage.eco[id].money += parseInt(arg[0]);
		return reply({
			body: `üí≥ s·ªë t√†i kho·∫£n: ${id}\nüí≥ giao d·ªãch: +${arg[0]}üíµ\nüí≥ n·ªôi dung: ${name.toUpperCase()} ƒê∆Ø·ª¢C ADMIN T·∫∂NG QU√Ä\nüí≥ s·ªë d∆∞ ch√≠nh: ${storage.eco[id].money}üíµ`,
			mentions: [{
				tag: id,
				id
			}]
		})*/
	}
}
